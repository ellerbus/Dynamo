{% include 'NamingConventions' -%}
{% capture PROC %}{{ BASECLASS }}MergeOne{% endcapture -%}
{% capture PROJECT %}{{ SOLUTION }}.DatabaseSchema{% endcapture -%}
{% capture FILENAME %}{{ PROJECT }}\Procedures\{{ BASECLASS }}\{{ PROC }}.sql{% endcapture -%}
 
create procedure dbo.{{ PROC }}{% for column in table.columns %}
    @{{ column.name | r_pad:30 }} {{ column.sql_type }}{%if column.clr_type == 'string' %}({{ column.length }}){% endif %}{%if forloop.last == false %},{% endif %}{% endfor %}
as
 
declare @outputs table
( {% for column in table.primary_keys %}
    {{ column.name | r_pad:30 }} {{ column.sql_type }}{%if column.clr_type == 'string' %}({{ column.length }}){% endif %}{%if forloop.last == false %},{% endif %}{% endfor %}
)
 
begin transaction
 
set xact_abort on
 
merge into dbo.{{ table.name }} as tgt
using
(
    select
        {% for column in table.columns %}@{{ column.name | r_pad:27 }}{{ column.name }}{%if forloop.last == false %},
        {% endif %}{% endfor %}
)
as x
on
(
        {% for column in table.primary_keys %}tgt.{{ column.name | r_pad:25 }} = x.{{ column.name }}{% if forloop.last == false %}
  and   {% endif %}{% endfor %}
)
 
when matched /* 'CONCURRENCY CHECK' and (tgt.rowversion = x.rowversion or x.rowversion is null)*/ then update set
        {% for column in table.columns %}{% if column.is_primary_key == false %}tgt.{{ column.name | r_pad:25 }} = x.{{ column.name }}{% if forloop.last == false %},
        {% endif %}{% endif %}{% endfor %}
 
when not matched by target then insert
(
    {% for column in table.columns %}{% if column.is_identity == false %}{{ column.name }}{%if forloop.last == false %},
    {% endif %}{% endif %}{% endfor %}
)
values
(
    {% for column in table.columns %}{% if column.is_identity == false %}x.{{ column.name }}{%if forloop.last == false %},
    {% endif %}{% endif %}{% endfor %}
)
 
output
    {% for column in table.primary_keys %}Inserted.{{ column.name }}{%if forloop.last == false %},
    {% endif %}{% endfor %}
into @outputs;
 
/* 'CONCURRENCY CHECK'
if @@rowcount <> 1
begin
 
    rollback
 
    raiserror ('At least one record has changed or does not exist. (CONCURRENCY CHECK)', 16, 1)
 
end
*/
 
commit
 
select  *
from    @outputs
 
go