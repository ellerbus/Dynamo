{% capture BASECLASS %}{{ table.name | pascal }}{% endcapture -%}
{% capture REPO %}I{{ table.name | pascal }}Repository{% endcapture -%}
{% capture PROJECT %}{{ NAMESPACE }}.Core{% endcapture -%}
{% capture FILENAME %}{{ PROJECT }}\Repositories\{{ REPO }}.cs{% endcapture -%}
using System;
using Insight.Database;

namespace {{ PROJECT }}.Repositories
{
	///	<summary>
	///
	///	</summary>
	public interface {{ REPO }}
	{
		///	<summary>
		///	Gets a single {{ BASECLASS }} by primary key calling the
		///	stored procedure Select{{ BASECLASS }}
		///	</summary>
		[Sql("Select{{ BASECLASS }}")]
		{{ BASECLASS }} Get({% for column in table.primary_keys %}{{ column.clr_type }} {{ column.name | camel }}{%if forloop.last == false %}, {% endif %}{% endfor %});

		///	<summary>
		///	Deletes a single {{ BASECLASS }} calling the
		///	stored procedure Delete{{ BASECLASS }}
		///	</summary>
		[Sql("Delete{{ BASECLASS }}")]
		void Delete({{ BASECLASS }} {{ BASECLASS | camel }});

		///	<summary>
		///	Deletes many {{ BASECLASS }} calling the
		///	stored procedure Delete{{ BASECLASS | plural }}
		///	</summary>
		[Sql("Delete{{ BASECLASS | plural }}")]
		void Delete(IEnumerable<{{ BASECLASS }}> {{ BASECLASS | plural | camel }});

		///	<summary>
		///	Deletes a single {{ BASECLASS }} calling the
		///	stored procedure Upsert{{ BASECLASS }}
		///	</summary>
		[Sql("Upsert{{ BASECLASS }}")]
		void Save{{ BASECLASS }} {{ BASECLASS | camel }});

		///	<summary>
		///	Deletes many {{ BASECLASS }} calling the
		///	stored procedure Upsert{{ BASECLASS | plural }}
		///	</summary>
		[Sql("Upsert{{ BASECLASS | plural }}")]
		void Save(IEnumerable<{{ BASECLASS }}> {{ BASECLASS | plural | camel }});
	}
}