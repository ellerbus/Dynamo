{% capture BASECLASS %}{{ table.class_name }}{% endcapture -%}
{% capture TEST %}{{ BASECLASS }}ValidatorTests{% endcapture -%}
{% capture VALIDATOR %}{{ BASECLASS }}Validator{% endcapture -%}
{% capture PROJECT %}{{ SOLUTION }}.Tests{% endcapture -%}
{% capture FILENAME %}{{ PROJECT }}\Core\Validators\{{ TEST }}.cs{% endcapture -%}
using System;
using System.Collections.Generic;
using System.Linq;
using FluentValidation.TestHelper;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using {{ SOLUTION }}.Core.Validators;

namespace {{ PROJECT }}.Core.Validators
{
	[TestClass]
	public class {{ TEST }}
	{
		#region Members

		private {{ VALIDATOR }} _validator = new {{ VALIDATOR }}();

		#endregion
		
		#region Validation Rule Tests
		{% for column in table.columns %}
		[TestMethod]
		public void {{ VALIDATOR }}_RuleFor_{{ column.property_name }}()
		{
			//	TODO
			//_validator.ShouldHaveValidationErrorFor(v => v.{{ column.property_name }}, default({{ column.clr_type }}));
			
			{% if column.clr_type == 'string' %}
			_validator.ShouldHaveValidationErrorFor(v => v.{{ column.property_name }}, "");
			_validator.ShouldNotHaveValidationErrorFor(v => v.{{ column.property_name }}, new string('0', {{ column.length }}));
			_validator.ShouldHaveValidationErrorFor(v => v.{{ column.property_name }}, new string('0', {{ column.length }} + 1));
			{% endif %}
		}
		
		{% endfor %}
		#endregion
	}
}