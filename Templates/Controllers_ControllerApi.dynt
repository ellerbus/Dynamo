{% capture BASECLASS %}{{ table.name | pascal }}{% endcapture -%}
{% capture CONTROLLER %}{{ BASECLASS }}Controller{% endcapture -%}
{% capture SERVICE %}{{ BASECLASS }}Service{% endcapture -%}
{% capture VALIDATOR %}IValidator<{{ BASECLASS }}>{% endcapture -%}
{% capture PROJECT %}{{ SOLUTION }}.WebApi{% endcapture -%}
{% capture CORE %}{{ SOLUTION }}.Core{% endcapture -%}
{% capture FILENAME %}{{ PROJECT }}\Controllers\{{ CONTROLLER }}.cs{% endcapture -%}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using FluentValidation;
using FluentValidation.Results;
using {{ CORE }}.Models;
using {{ CORE }}.Services;
using {{ CORE }}.Validators;

namespace {{ PROJECT }}.Controllers
{
	///	<summary>
	/// Represents a basic controller for {{ BASECLASS }}
	///	</summary>
	public class {{ CONTROLLER }} : ApiController
	{
		#region Members
	
		private {{ SERVICE }} _service;
		private {{ VALIDATOR }} _validator;
		
		#endregion
		
		#region Contructors

		public {{ CONTROLLER }}({{ SERVICE }} service, {{ VALIDATOR }} validator)
		{
			_service = service;
			_validator = validator;
		}
		
		#endregion
		
		#region Verb Actions

		// GET: api/Member
		public IEnumerable<{{ BASECLASS }}> Get()
		{
			return _service.GetList();
		}

		// GET: api/Member/5
		public {{ BASECLASS }} Get({% for column in table.primary_keys %}{{ column.clr_type }} {{ column.name | camel }}{%if forloop.last == false %}, {% endif %}{% endfor %})
		{
			{{ BASECLASS }} {{ BASECLASS | camel }} = _service.Get({% for column in table.primary_keys %}{{ column.name | camel }}{%if forloop.last == false %}, {% endif %}{% endfor %});
			
			return {{ BASECLASS | camel }};
		}

		// POST: api/Member
		public void Post([FromBody]{{ BASECLASS }} {{ BASECLASS | camel }})
		{
			ValidationResult vr = _validator.Validate({{ BASECLASS | camel }});

			if (vr.IsValid)
			{
				_service.Save({{ BASECLASS | camel }});

				return;
			}
			
			throw new NotImplementedException();
		}

		// PUT: api/Member/5
		public void Put({% for column in table.primary_keys %}{{ column.clr_type }} {{ column.name | camel }}{%if forloop.last == false %}, {% endif %}{% endfor %}, [FromBody]{{ BASECLASS }} {{ BASECLASS | camel }})
		{
			{{ BASECLASS }} model = _service.Get({% for column in table.primary_keys %}{{ column.name | camel }}{%if forloop.last == false %}, {% endif %}{% endfor %});
			{% for column in table.columns %}{% if column.is_primary_key == false %}
			model.{{ column.name | pascal | remove:BASECLASS }} = {{ BASECLASS | camel }}.{{ column.name | pascal | remove:BASECLASS }};{% endif %}{% endfor -%}


			ValidationResult vr = _validator.Validate(model);

			if (vr.IsValid)
			{
				_service.Save(model);

				return;
			}
			
			throw new NotImplementedException();
		}

		// DELETE: api/Member/5
		public void Delete({% for column in table.primary_keys %}{{ column.clr_type }} {{ column.name | camel }}{%if forloop.last == false %}, {% endif %}{% endfor %})
		{
			{{ BASECLASS }} model = _service.Get({% for column in table.primary_keys %}{{ column.name | camel }}{%if forloop.last == false %}, {% endif %}{% endfor %});

			_service.Delete(model);
		}
		
		#endregion
	}
}
