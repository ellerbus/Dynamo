{% include 'NamingConventions' -%}
{% capture PROC %}{{ BASECLASS }}UpsertOne{% endcapture -%}
{% capture PROJECT %}{{ SOLUTION }}.Database{% endcapture -%}
{% capture FILENAME %}{{ PROJECT }}\Procedures\{{ BASECLASS }}\{{ PROC }}.sql{% endcapture -%}

if object_id('dbo.{{ PROC }}', 'P') is not null drop procedure dbo.{{ PROC }}
go

create procedure dbo.{{ PROC }}{% for column in table.columns %}
	@{{ column.name | r_pad:30 }} {{ column.sql_type }}{%if column.clr_type == 'string' %}({{ column.length }}){% endif %}{%if forloop.last == false %},{% endif %}{% endfor %}
as

update	dbo.{{ table.name }}
set		{% for column in table.columns %}{% if column.is_primary_key == false %}{{ column.name | r_pad:27 }} = @{{ column.name }}{%if forloop.last == false %},
		{% endif %}{% endif %}{% endfor %}
where	{% for column in table.primary_keys %}{{ column.name | r_pad:27 }} = @{{ column.name }}{%if forloop.last == false %}
  and	{% endif %}{% endfor %}

if	@@rowcount = 0
begin

	insert into dbo.{{ table.name }}
		(
			{% for column in table.columns %}{% if column.is_identity == false %}{{ column.name }}{%if forloop.last == false %},
			{% endif %}{% endif %}{% endfor %}
		)
		values
		(
			{% for column in table.columns %}{% if column.is_identity == false %}@{{ column.name }}{%if forloop.last == false %},
			{% endif %}{% endif %}{% endfor %}
		)
		
		{% if table.has_identity == true %}set @{{ table.identity.name }} = ident_current('dbo.{{ table.name }}'){% endif %}
end

{% if table.has_identity == true %}select	@{{ table.identity.name }}{% endif %}

go
