{% capture BASECLASS %}{{ table.class_name }}{% endcapture -%}
{% capture PROJECT %}{{ SOLUTION }}.Core{% endcapture -%}
{% capture FILENAME %}{{ PROJECT }}\Models\{{ BASECLASS }}.cs{% endcapture -%}
using System;
using System.Diagnostics;
using Augment;

namespace {{ PROJECT }}.Models
{
	///	<summary>
	///
	///	</summary>
	[DebuggerDisplay("{DebuggerDisplay,nq}")]
	public class {{ BASECLASS }} : Entities.{{ BASECLASS }}Entity
	{	
		#region ToString/DebuggerDisplay

		///	<summary>
		///	DebuggerDisplay for this object
		///	</summary>
		private string DebuggerDisplay
		{
			get
			{
				string pk = "[" + {% for column in table.primary_keys %}{{ column.property_name }}{% if column.clr_type == 'DateTime' %}.ToString("yyyy-MM-dd"){% endif %}{%if forloop.last == false %} + "," {% endif %} + {% endfor %}"]";
				
				string uq = "[" + {% for column in table.unique_keys %}{{ column.property_name }}{% if column.clr_type == 'DateTime' %}.ToString("yyyy-MM-dd"){% endif %}{%if forloop.last == false %} + "," {% endif %} + {% endfor %}"]";
				
				return "{0}, pk={1}, uq={2}".FormatArgs(GetType().Name, pk, uq);
			}
		}
		
		#endregion

		#region Foreign Key Properties
		{% for column in table.foreign_keys %}
		/////	<summary>
		/////	Gets / Sets the foreign key to '{{ column.name }}'
		/////	</summary>
		//public {{ column.name | remove:'ID' | pascal }} {{ column.name | remove:'ID' | pascal }}
		//{
		//	get
		//	{
		//		return _{{ column.name | remove:'ID' | camel }};
		//	}
		//	internal set
		//	{
		//		_{{ column.name | remove:'ID' | camel }} = value;
		//
		//		{{ column.name | pascal }} = value == null ? default({{ column.clr_type }}) : value.{{ column.name | pascal }}
		//	}
		//}
		//private {{ column.name | remove:'ID' | pascal }} _{{ column.name | remove:'ID' | camel }}
		
		{% endfor -%}
		
		#endregion
	}
}